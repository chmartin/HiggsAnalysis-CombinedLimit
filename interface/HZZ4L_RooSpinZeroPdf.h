/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef HZZ4L_ROOSPINZEROPDF
#define HZZ4L_ROOSPINZEROPDF

#include "RooAbsPdf.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"

 
class HZZ4L_RooSpinZeroPdf : public RooAbsPdf {
public:
  HZZ4L_RooSpinZeroPdf() {} ; 
  HZZ4L_RooSpinZeroPdf(const char *name, const char *title,
		       RooAbsReal& _kd,
		       RooAbsReal& _kdint,
		       RooAbsReal& _fai,
		       vector<TH2F*>& _histos,
		       bool  _withAcc);
		    
  HZZ4L_RooSpinZeroPdf(const HZZ4L_RooSpinZeroPdf& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new HZZ4L_RooSpinZeroPdf(*this,newname); }
  inline virtual ~HZZ4L_RooSpinZeroPdf() { }
  
  Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName=0) const ;
  Double_t analyticalIntegral(Int_t code, const char* rangeName=0) const ;
  
	
protected:

  RooRealProxy kd ;
  RooRealProxy kdint ;
  RooRealProxy fai ;
  vector<TH2F*> histos;
  bool withAcc;
  
    
  Double_t evaluate() const ;

private:

  ClassDef(HZZ4L_RooSpinZeroPdf,1) // Your description goes here...
};
 
#endif
